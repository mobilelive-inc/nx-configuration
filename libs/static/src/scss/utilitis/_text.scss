// stylelint-disable declaration-no-important
//
// Text truncate
//
// Requires inline-block or block for proper styling
@mixin text--truncate() {
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
}

// Typography
@mixin text-emphasis-variant($parent, $color, $ignore-warning: false) {
  #{$parent} {
    color: $color;
  }
}

@mixin text--hide($ignore-warning: false) {
  color: transparent !important;
  text-shadow: none !important;
  background-color: transparent !important;
  border: 0 !important;
}

// Lead
.lead {
  @include font-size(var(--lead-font-size));
  line-height: var(--line-height-lg) !important;
  font-weight: var(--lead-font-weight) !important;
  color: var(--lead-text-color) !important;
}

.text--monospace {
  font-family: var(--font-family-monospace) !important;
}

// Alignment
.text--justify {
  text-align: justify !important;
}
.text--wrap {
  white-space: normal !important;
}
.text--nowrap {
  white-space: nowrap !important;
}
.text--truncate {
  @include text--truncate();
}

// Responsive alignment
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}--left {
      text-align: left !important;
    }
    .text#{$infix}--right {
      text-align: right !important;
    }
    .text#{$infix}--center {
      text-align: center !important;
    }
  }
}

// Transformation
.text--lowercase {
  text-transform: lowercase !important;
}
.text--uppercase {
  text-transform: uppercase !important;
}
.text--capitalize {
  text-transform: capitalize !important;
}

// Weight and italics
.font--weight--light {
  font-weight: var(--font-weight-light) !important;
}
.font--weight--lighter {
  font-weight: var(--font-weight-lighter) !important;
}
.font--weight--normal {
  font-weight: var(--font-weight-normal) !important;
}
.font--weight--bold {
  font-weight: var(--font-weight-bold) !important;
}
.font--weight--bolder {
  font-weight: var(--font-weight-bolder) !important;
}
.font--italic {
  font-style: italic !important;
}

// Contextual colors
.text--white {
  color: (--white) !important;
}
@each $color, $value in $theme-colors {
  @include text-emphasis-variant('.text--#{$color}', $value, true);
}

.text--body {
  color: var(--body-color) !important;
}
.text--muted {
  color: var(--text-muted) !important;
}

.text--black--50 {
  color: rgba(var(--dark), 0.5) !important;
}
.text--white--50 {
  color: rgba(var(--white), 0.5) !important;
}

// Misc
.text--hide {
  @include text--hide($ignore-warning: true);
}

.text--decoration--none {
  text-decoration: none !important;
}
.text--decoration--underline {
  text-decoration: underline !important;
}
.text--break {
  word-break: break-word !important; // IE & < Edge 18
  overflow-wrap: break-word !important;
}

// Reset
.text--reset {
  color: inherit !important;
}

// Horizontal rules
hr {
  margin-top: var(--hr-margin-y);
  margin-bottom: var(--hr-margin-y);
  border: 0;
  border-top-width: var(--hr-border-width);
  border-top-style: solid;
  border-top-color: var(--hr-border-color);
}

// Emphasis
small,
.small {
  font-size: var(--font-size-sm) !important;
  font-weight: var(--font-weight-normal) !important;
}
mark,
.mark {
  padding: var(--mark-padding) !important;
  background-color: var(--mark-bg) !important;
}

// Lists Style
.list--unstyled {
  padding-left: 0 !important;
  list-style: none !important;
}
.list--inline {
  padding-left: 0 !important;
  list-style: none !important;
}
.list--inline--item {
  display: inline-block !important;
  &:not(:last-child) {
    margin-right: var(--list-inline-padding) !important;
  }
}

// Misc
// Blockquotes
.blockquote {
  margin-bottom: var(--global-spacer) !important;
  @include font-size(var(--blockquote-font-size));
}
.blockquote-footer {
  display: block;
  color: var(--blockquote-small-color);
  &:before {
    content: '\2014\00A0';
  }
}

// Pointer
.pointer--events--none {
  pointer-events: none !important;
}
